{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e8fc25a0",
   "metadata": {},
   "source": [
    "**Is GDP(Gross Domestic Product) of a country a direct contributer to the climate change?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92404af3",
   "metadata": {},
   "source": [
    "**I have used two data sources for builing my pipeline:\n",
    "\n",
    "source1: GDP Data of countries(World Bank IBRD-IDA)\n",
    "url: https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2022&start=2021&view=chart\n",
    "licence:CC-BY 4.0\n",
    "https://datacatalog.worldbank.org/public-licenses#cc-by\n",
    "\n",
    "source2: Surface temperature data of countries(GlobalDataLab)\n",
    "url:https://globaldatalab.org/geos/download/surfacetempyear/"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0cff0682",
   "metadata": {},
   "source": [
    "Firstly we make the necessary imports"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "95645aa9",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import sqlite3"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "61aacdb1",
   "metadata": {},
   "source": [
    "we read the CSV file using Pandas as pandas has numerous features to clean and transform our data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c4648306",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1 = pd.read_csv(\n",
    "    r\"C:\\Users\\YUGAL\\Downloads\\API_NY.GDP.MKTP.CD_DS2_en_csv_v2_584499\\API_NY.GDP.MKTP.CD_DS2_en_csv_v2_584499.csv\",\n",
    "    sep=',',\n",
    "    skiprows=4,\n",
    "    error_bad_lines=False,\n",
    "    low_memory=False\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b45c1e91",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country Name</th>\n",
       "      <th>Country Code</th>\n",
       "      <th>Indicator Name</th>\n",
       "      <th>Indicator Code</th>\n",
       "      <th>1960</th>\n",
       "      <th>1961</th>\n",
       "      <th>1962</th>\n",
       "      <th>1963</th>\n",
       "      <th>1964</th>\n",
       "      <th>1965</th>\n",
       "      <th>...</th>\n",
       "      <th>2015</th>\n",
       "      <th>2016</th>\n",
       "      <th>2017</th>\n",
       "      <th>2018</th>\n",
       "      <th>2019</th>\n",
       "      <th>2020</th>\n",
       "      <th>2021</th>\n",
       "      <th>2022</th>\n",
       "      <th>2023</th>\n",
       "      <th>Unnamed: 68</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Aruba</td>\n",
       "      <td>ABW</td>\n",
       "      <td>GDP (current US$)</td>\n",
       "      <td>NY.GDP.MKTP.CD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>2.962907e+09</td>\n",
       "      <td>2.983635e+09</td>\n",
       "      <td>3.092429e+09</td>\n",
       "      <td>3.276184e+09</td>\n",
       "      <td>3.395799e+09</td>\n",
       "      <td>2.558906e+09</td>\n",
       "      <td>3.103184e+09</td>\n",
       "      <td>3.544708e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Africa Eastern and Southern</td>\n",
       "      <td>AFE</td>\n",
       "      <td>GDP (current US$)</td>\n",
       "      <td>NY.GDP.MKTP.CD</td>\n",
       "      <td>1.847810e+10</td>\n",
       "      <td>1.936631e+10</td>\n",
       "      <td>2.050647e+10</td>\n",
       "      <td>2.224273e+10</td>\n",
       "      <td>2.429433e+10</td>\n",
       "      <td>2.661956e+10</td>\n",
       "      <td>...</td>\n",
       "      <td>9.325135e+11</td>\n",
       "      <td>8.900514e+11</td>\n",
       "      <td>1.028394e+12</td>\n",
       "      <td>1.012521e+12</td>\n",
       "      <td>1.006191e+12</td>\n",
       "      <td>9.288802e+11</td>\n",
       "      <td>1.086531e+12</td>\n",
       "      <td>1.185138e+12</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>AFG</td>\n",
       "      <td>GDP (current US$)</td>\n",
       "      <td>NY.GDP.MKTP.CD</td>\n",
       "      <td>5.377778e+08</td>\n",
       "      <td>5.488889e+08</td>\n",
       "      <td>5.466667e+08</td>\n",
       "      <td>7.511112e+08</td>\n",
       "      <td>8.000000e+08</td>\n",
       "      <td>1.006667e+09</td>\n",
       "      <td>...</td>\n",
       "      <td>1.913422e+10</td>\n",
       "      <td>1.811657e+10</td>\n",
       "      <td>1.875346e+10</td>\n",
       "      <td>1.805322e+10</td>\n",
       "      <td>1.879944e+10</td>\n",
       "      <td>1.995593e+10</td>\n",
       "      <td>1.426650e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Africa Western and Central</td>\n",
       "      <td>AFW</td>\n",
       "      <td>GDP (current US$)</td>\n",
       "      <td>NY.GDP.MKTP.CD</td>\n",
       "      <td>1.041165e+10</td>\n",
       "      <td>1.113592e+10</td>\n",
       "      <td>1.195171e+10</td>\n",
       "      <td>1.268581e+10</td>\n",
       "      <td>1.384900e+10</td>\n",
       "      <td>1.487476e+10</td>\n",
       "      <td>...</td>\n",
       "      <td>7.692632e+11</td>\n",
       "      <td>6.921149e+11</td>\n",
       "      <td>6.856303e+11</td>\n",
       "      <td>7.681582e+11</td>\n",
       "      <td>8.234056e+11</td>\n",
       "      <td>7.869624e+11</td>\n",
       "      <td>8.449275e+11</td>\n",
       "      <td>8.753937e+11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Angola</td>\n",
       "      <td>AGO</td>\n",
       "      <td>GDP (current US$)</td>\n",
       "      <td>NY.GDP.MKTP.CD</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>9.049642e+10</td>\n",
       "      <td>5.276162e+10</td>\n",
       "      <td>7.369016e+10</td>\n",
       "      <td>7.945069e+10</td>\n",
       "      <td>7.089796e+10</td>\n",
       "      <td>4.850156e+10</td>\n",
       "      <td>6.650513e+10</td>\n",
       "      <td>1.067828e+11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 69 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Country Name Country Code     Indicator Name  \\\n",
       "0                        Aruba          ABW  GDP (current US$)   \n",
       "1  Africa Eastern and Southern          AFE  GDP (current US$)   \n",
       "2                  Afghanistan          AFG  GDP (current US$)   \n",
       "3   Africa Western and Central          AFW  GDP (current US$)   \n",
       "4                       Angola          AGO  GDP (current US$)   \n",
       "\n",
       "   Indicator Code          1960          1961          1962          1963  \\\n",
       "0  NY.GDP.MKTP.CD           NaN           NaN           NaN           NaN   \n",
       "1  NY.GDP.MKTP.CD  1.847810e+10  1.936631e+10  2.050647e+10  2.224273e+10   \n",
       "2  NY.GDP.MKTP.CD  5.377778e+08  5.488889e+08  5.466667e+08  7.511112e+08   \n",
       "3  NY.GDP.MKTP.CD  1.041165e+10  1.113592e+10  1.195171e+10  1.268581e+10   \n",
       "4  NY.GDP.MKTP.CD           NaN           NaN           NaN           NaN   \n",
       "\n",
       "           1964          1965  ...          2015          2016          2017  \\\n",
       "0           NaN           NaN  ...  2.962907e+09  2.983635e+09  3.092429e+09   \n",
       "1  2.429433e+10  2.661956e+10  ...  9.325135e+11  8.900514e+11  1.028394e+12   \n",
       "2  8.000000e+08  1.006667e+09  ...  1.913422e+10  1.811657e+10  1.875346e+10   \n",
       "3  1.384900e+10  1.487476e+10  ...  7.692632e+11  6.921149e+11  6.856303e+11   \n",
       "4           NaN           NaN  ...  9.049642e+10  5.276162e+10  7.369016e+10   \n",
       "\n",
       "           2018          2019          2020          2021          2022  2023  \\\n",
       "0  3.276184e+09  3.395799e+09  2.558906e+09  3.103184e+09  3.544708e+09   NaN   \n",
       "1  1.012521e+12  1.006191e+12  9.288802e+11  1.086531e+12  1.185138e+12   NaN   \n",
       "2  1.805322e+10  1.879944e+10  1.995593e+10  1.426650e+10           NaN   NaN   \n",
       "3  7.681582e+11  8.234056e+11  7.869624e+11  8.449275e+11  8.753937e+11   NaN   \n",
       "4  7.945069e+10  7.089796e+10  4.850156e+10  6.650513e+10  1.067828e+11   NaN   \n",
       "\n",
       "   Unnamed: 68  \n",
       "0          NaN  \n",
       "1          NaN  \n",
       "2          NaN  \n",
       "3          NaN  \n",
       "4          NaN  \n",
       "\n",
       "[5 rows x 69 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.head() # To get a rough picture of the data we are dealing with"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dcd8e4dc",
   "metadata": {},
   "source": [
    "**Currently let us target at the data from the years (2002-2022) and we only need the \"Country Name\" column and get rid of the other columns."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "cadb9578",
   "metadata": {},
   "outputs": [],
   "source": [
    "year_range = range(2002,2023)\n",
    "years = [str(i) for i in year_range]\n",
    "cat_cols = ['Country Name']\n",
    "cols_to_keep = cat_cols + years\n",
    "gdp_data = df1[cols_to_keep]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "4d74fccb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 266 entries, 0 to 265\n",
      "Data columns (total 22 columns):\n",
      " #   Column        Non-Null Count  Dtype  \n",
      "---  ------        --------------  -----  \n",
      " 0   Country Name  266 non-null    object \n",
      " 1   2002          254 non-null    float64\n",
      " 2   2003          254 non-null    float64\n",
      " 3   2004          254 non-null    float64\n",
      " 4   2005          254 non-null    float64\n",
      " 5   2006          255 non-null    float64\n",
      " 6   2007          255 non-null    float64\n",
      " 7   2008          256 non-null    float64\n",
      " 8   2009          256 non-null    float64\n",
      " 9   2010          257 non-null    float64\n",
      " 10  2011          260 non-null    float64\n",
      " 11  2012          258 non-null    float64\n",
      " 12  2013          259 non-null    float64\n",
      " 13  2014          260 non-null    float64\n",
      " 14  2015          258 non-null    float64\n",
      " 15  2016          258 non-null    float64\n",
      " 16  2017          258 non-null    float64\n",
      " 17  2018          258 non-null    float64\n",
      " 18  2019          258 non-null    float64\n",
      " 19  2020          257 non-null    float64\n",
      " 20  2021          255 non-null    float64\n",
      " 21  2022          242 non-null    float64\n",
      "dtypes: float64(21), object(1)\n",
      "memory usage: 45.8+ KB\n"
     ]
    }
   ],
   "source": [
    "gdp_data.info() # Rough picutre of the subset of the data we selected "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "991bc5b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Aruba', 'Africa Eastern and Southern', 'Afghanistan',\n",
       "       'Africa Western and Central', 'Angola', 'Albania', 'Andorra',\n",
       "       'Arab World', 'United Arab Emirates', 'Argentina', 'Armenia',\n",
       "       'American Samoa', 'Antigua and Barbuda', 'Australia', 'Austria',\n",
       "       'Azerbaijan', 'Burundi', 'Belgium', 'Benin', 'Burkina Faso',\n",
       "       'Bangladesh', 'Bulgaria', 'Bahrain', 'Bahamas, The',\n",
       "       'Bosnia and Herzegovina', 'Belarus', 'Belize', 'Bermuda',\n",
       "       'Bolivia', 'Brazil', 'Barbados', 'Brunei Darussalam', 'Bhutan',\n",
       "       'Botswana', 'Central African Republic', 'Canada',\n",
       "       'Central Europe and the Baltics', 'Switzerland', 'Channel Islands',\n",
       "       'Chile', 'China', \"Cote d'Ivoire\", 'Cameroon', 'Congo, Dem. Rep.',\n",
       "       'Congo, Rep.', 'Colombia', 'Comoros', 'Cabo Verde', 'Costa Rica',\n",
       "       'Caribbean small states', 'Cuba', 'Curacao', 'Cayman Islands',\n",
       "       'Cyprus', 'Czechia', 'Germany', 'Djibouti', 'Dominica', 'Denmark',\n",
       "       'Dominican Republic', 'Algeria',\n",
       "       'East Asia & Pacific (excluding high income)',\n",
       "       'Early-demographic dividend', 'East Asia & Pacific',\n",
       "       'Europe & Central Asia (excluding high income)',\n",
       "       'Europe & Central Asia', 'Ecuador', 'Egypt, Arab Rep.',\n",
       "       'Euro area', 'Eritrea', 'Spain', 'Estonia', 'Ethiopia',\n",
       "       'European Union', 'Fragile and conflict affected situations',\n",
       "       'Finland', 'Fiji', 'France', 'Faroe Islands',\n",
       "       'Micronesia, Fed. Sts.', 'Gabon', 'United Kingdom', 'Georgia',\n",
       "       'Ghana', 'Gibraltar', 'Guinea', 'Gambia, The', 'Guinea-Bissau',\n",
       "       'Equatorial Guinea', 'Greece', 'Grenada', 'Greenland', 'Guatemala',\n",
       "       'Guam', 'Guyana', 'High income', 'Hong Kong SAR, China',\n",
       "       'Honduras', 'Heavily indebted poor countries (HIPC)', 'Croatia',\n",
       "       'Haiti', 'Hungary', 'IBRD only', 'IDA & IBRD total', 'IDA total',\n",
       "       'IDA blend', 'Indonesia', 'IDA only', 'Isle of Man', 'India',\n",
       "       'Not classified', 'Ireland', 'Iran, Islamic Rep.', 'Iraq',\n",
       "       'Iceland', 'Israel', 'Italy', 'Jamaica', 'Jordan', 'Japan',\n",
       "       'Kazakhstan', 'Kenya', 'Kyrgyz Republic', 'Cambodia', 'Kiribati',\n",
       "       'St. Kitts and Nevis', 'Korea, Rep.', 'Kuwait',\n",
       "       'Latin America & Caribbean (excluding high income)', 'Lao PDR',\n",
       "       'Lebanon', 'Liberia', 'Libya', 'St. Lucia',\n",
       "       'Latin America & Caribbean',\n",
       "       'Least developed countries: UN classification', 'Low income',\n",
       "       'Liechtenstein', 'Sri Lanka', 'Lower middle income',\n",
       "       'Low & middle income', 'Lesotho', 'Late-demographic dividend',\n",
       "       'Lithuania', 'Luxembourg', 'Latvia', 'Macao SAR, China',\n",
       "       'St. Martin (French part)', 'Morocco', 'Monaco', 'Moldova',\n",
       "       'Madagascar', 'Maldives', 'Middle East & North Africa', 'Mexico',\n",
       "       'Marshall Islands', 'Middle income', 'North Macedonia', 'Mali',\n",
       "       'Malta', 'Myanmar',\n",
       "       'Middle East & North Africa (excluding high income)', 'Montenegro',\n",
       "       'Mongolia', 'Northern Mariana Islands', 'Mozambique', 'Mauritania',\n",
       "       'Mauritius', 'Malawi', 'Malaysia', 'North America', 'Namibia',\n",
       "       'New Caledonia', 'Niger', 'Nigeria', 'Nicaragua', 'Netherlands',\n",
       "       'Norway', 'Nepal', 'Nauru', 'New Zealand', 'OECD members', 'Oman',\n",
       "       'Other small states', 'Pakistan', 'Panama', 'Peru', 'Philippines',\n",
       "       'Palau', 'Papua New Guinea', 'Poland', 'Pre-demographic dividend',\n",
       "       'Puerto Rico', \"Korea, Dem. People's Rep.\", 'Portugal', 'Paraguay',\n",
       "       'West Bank and Gaza', 'Pacific island small states',\n",
       "       'Post-demographic dividend', 'French Polynesia', 'Qatar',\n",
       "       'Romania', 'Russian Federation', 'Rwanda', 'South Asia',\n",
       "       'Saudi Arabia', 'Sudan', 'Senegal', 'Singapore', 'Solomon Islands',\n",
       "       'Sierra Leone', 'El Salvador', 'San Marino', 'Somalia', 'Serbia',\n",
       "       'Sub-Saharan Africa (excluding high income)', 'South Sudan',\n",
       "       'Sub-Saharan Africa', 'Small states', 'Sao Tome and Principe',\n",
       "       'Suriname', 'Slovak Republic', 'Slovenia', 'Sweden', 'Eswatini',\n",
       "       'Sint Maarten (Dutch part)', 'Seychelles', 'Syrian Arab Republic',\n",
       "       'Turks and Caicos Islands', 'Chad',\n",
       "       'East Asia & Pacific (IDA & IBRD countries)',\n",
       "       'Europe & Central Asia (IDA & IBRD countries)', 'Togo', 'Thailand',\n",
       "       'Tajikistan', 'Turkmenistan',\n",
       "       'Latin America & the Caribbean (IDA & IBRD countries)',\n",
       "       'Timor-Leste', 'Middle East & North Africa (IDA & IBRD countries)',\n",
       "       'Tonga', 'South Asia (IDA & IBRD)',\n",
       "       'Sub-Saharan Africa (IDA & IBRD countries)', 'Trinidad and Tobago',\n",
       "       'Tunisia', 'Turkiye', 'Tuvalu', 'Tanzania', 'Uganda', 'Ukraine',\n",
       "       'Upper middle income', 'Uruguay', 'United States', 'Uzbekistan',\n",
       "       'St. Vincent and the Grenadines', 'Venezuela, RB',\n",
       "       'British Virgin Islands', 'Virgin Islands (U.S.)', 'Viet Nam',\n",
       "       'Vanuatu', 'World', 'Samoa', 'Kosovo', 'Yemen, Rep.',\n",
       "       'South Africa', 'Zambia', 'Zimbabwe'], dtype=object)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gdp_data['Country Name'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a40e5ec",
   "metadata": {},
   "source": [
    "**selcting 5 European countries for our study"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "23837c24",
   "metadata": {},
   "outputs": [],
   "source": [
    "countries_to_study = ['Germany','Ireland','Poland','Greece','Italy']\n",
    "gdp_filtered = gdp_data[gdp_data['Country Name'].isin(countries_to_study)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "debef607",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country Name</th>\n",
       "      <th>2002</th>\n",
       "      <th>2003</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "      <th>2006</th>\n",
       "      <th>2007</th>\n",
       "      <th>2008</th>\n",
       "      <th>2009</th>\n",
       "      <th>2010</th>\n",
       "      <th>...</th>\n",
       "      <th>2013</th>\n",
       "      <th>2014</th>\n",
       "      <th>2015</th>\n",
       "      <th>2016</th>\n",
       "      <th>2017</th>\n",
       "      <th>2018</th>\n",
       "      <th>2019</th>\n",
       "      <th>2020</th>\n",
       "      <th>2021</th>\n",
       "      <th>2022</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>Germany</td>\n",
       "      <td>2.078485e+12</td>\n",
       "      <td>2.501640e+12</td>\n",
       "      <td>2.814354e+12</td>\n",
       "      <td>2.846864e+12</td>\n",
       "      <td>2.994704e+12</td>\n",
       "      <td>3.425578e+12</td>\n",
       "      <td>3.745264e+12</td>\n",
       "      <td>3.411261e+12</td>\n",
       "      <td>3.399668e+12</td>\n",
       "      <td>...</td>\n",
       "      <td>3.733805e+12</td>\n",
       "      <td>3.889093e+12</td>\n",
       "      <td>3.357586e+12</td>\n",
       "      <td>3.469853e+12</td>\n",
       "      <td>3.690849e+12</td>\n",
       "      <td>3.974443e+12</td>\n",
       "      <td>3.889178e+12</td>\n",
       "      <td>3.887727e+12</td>\n",
       "      <td>4.278504e+12</td>\n",
       "      <td>4.082469e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>Greece</td>\n",
       "      <td>1.545642e+11</td>\n",
       "      <td>2.023701e+11</td>\n",
       "      <td>2.409636e+11</td>\n",
       "      <td>2.478754e+11</td>\n",
       "      <td>2.735467e+11</td>\n",
       "      <td>3.189028e+11</td>\n",
       "      <td>3.559087e+11</td>\n",
       "      <td>3.313085e+11</td>\n",
       "      <td>2.971250e+11</td>\n",
       "      <td>...</td>\n",
       "      <td>2.389077e+11</td>\n",
       "      <td>2.354581e+11</td>\n",
       "      <td>1.956835e+11</td>\n",
       "      <td>1.931481e+11</td>\n",
       "      <td>1.998444e+11</td>\n",
       "      <td>2.120494e+11</td>\n",
       "      <td>2.052528e+11</td>\n",
       "      <td>1.884803e+11</td>\n",
       "      <td>2.146678e+11</td>\n",
       "      <td>2.175813e+11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>Ireland</td>\n",
       "      <td>1.285960e+11</td>\n",
       "      <td>1.646708e+11</td>\n",
       "      <td>1.943721e+11</td>\n",
       "      <td>2.118770e+11</td>\n",
       "      <td>2.321806e+11</td>\n",
       "      <td>2.700793e+11</td>\n",
       "      <td>2.754475e+11</td>\n",
       "      <td>2.364431e+11</td>\n",
       "      <td>2.219136e+11</td>\n",
       "      <td>...</td>\n",
       "      <td>2.381125e+11</td>\n",
       "      <td>2.596819e+11</td>\n",
       "      <td>2.923642e+11</td>\n",
       "      <td>2.985593e+11</td>\n",
       "      <td>3.372418e+11</td>\n",
       "      <td>3.866934e+11</td>\n",
       "      <td>3.989330e+11</td>\n",
       "      <td>4.286087e+11</td>\n",
       "      <td>5.133918e+11</td>\n",
       "      <td>5.331400e+11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>Italy</td>\n",
       "      <td>1.276769e+12</td>\n",
       "      <td>1.577622e+12</td>\n",
       "      <td>1.806543e+12</td>\n",
       "      <td>1.858217e+12</td>\n",
       "      <td>1.949552e+12</td>\n",
       "      <td>2.213102e+12</td>\n",
       "      <td>2.408655e+12</td>\n",
       "      <td>2.199929e+12</td>\n",
       "      <td>2.136100e+12</td>\n",
       "      <td>...</td>\n",
       "      <td>2.141924e+12</td>\n",
       "      <td>2.162010e+12</td>\n",
       "      <td>1.836638e+12</td>\n",
       "      <td>1.877072e+12</td>\n",
       "      <td>1.961796e+12</td>\n",
       "      <td>2.091932e+12</td>\n",
       "      <td>2.011302e+12</td>\n",
       "      <td>1.897462e+12</td>\n",
       "      <td>2.155360e+12</td>\n",
       "      <td>2.049737e+12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>190</th>\n",
       "      <td>Poland</td>\n",
       "      <td>1.990704e+11</td>\n",
       "      <td>2.178287e+11</td>\n",
       "      <td>2.551073e+11</td>\n",
       "      <td>3.061459e+11</td>\n",
       "      <td>3.446267e+11</td>\n",
       "      <td>4.290208e+11</td>\n",
       "      <td>5.335998e+11</td>\n",
       "      <td>4.397316e+11</td>\n",
       "      <td>4.756966e+11</td>\n",
       "      <td>...</td>\n",
       "      <td>5.157620e+11</td>\n",
       "      <td>5.390805e+11</td>\n",
       "      <td>4.771113e+11</td>\n",
       "      <td>4.700246e+11</td>\n",
       "      <td>5.246412e+11</td>\n",
       "      <td>5.887799e+11</td>\n",
       "      <td>5.960585e+11</td>\n",
       "      <td>5.994428e+11</td>\n",
       "      <td>6.813461e+11</td>\n",
       "      <td>6.881250e+11</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Country Name          2002          2003          2004          2005  \\\n",
       "55       Germany  2.078485e+12  2.501640e+12  2.814354e+12  2.846864e+12   \n",
       "89        Greece  1.545642e+11  2.023701e+11  2.409636e+11  2.478754e+11   \n",
       "111      Ireland  1.285960e+11  1.646708e+11  1.943721e+11  2.118770e+11   \n",
       "116        Italy  1.276769e+12  1.577622e+12  1.806543e+12  1.858217e+12   \n",
       "190       Poland  1.990704e+11  2.178287e+11  2.551073e+11  3.061459e+11   \n",
       "\n",
       "             2006          2007          2008          2009          2010  \\\n",
       "55   2.994704e+12  3.425578e+12  3.745264e+12  3.411261e+12  3.399668e+12   \n",
       "89   2.735467e+11  3.189028e+11  3.559087e+11  3.313085e+11  2.971250e+11   \n",
       "111  2.321806e+11  2.700793e+11  2.754475e+11  2.364431e+11  2.219136e+11   \n",
       "116  1.949552e+12  2.213102e+12  2.408655e+12  2.199929e+12  2.136100e+12   \n",
       "190  3.446267e+11  4.290208e+11  5.335998e+11  4.397316e+11  4.756966e+11   \n",
       "\n",
       "     ...          2013          2014          2015          2016  \\\n",
       "55   ...  3.733805e+12  3.889093e+12  3.357586e+12  3.469853e+12   \n",
       "89   ...  2.389077e+11  2.354581e+11  1.956835e+11  1.931481e+11   \n",
       "111  ...  2.381125e+11  2.596819e+11  2.923642e+11  2.985593e+11   \n",
       "116  ...  2.141924e+12  2.162010e+12  1.836638e+12  1.877072e+12   \n",
       "190  ...  5.157620e+11  5.390805e+11  4.771113e+11  4.700246e+11   \n",
       "\n",
       "             2017          2018          2019          2020          2021  \\\n",
       "55   3.690849e+12  3.974443e+12  3.889178e+12  3.887727e+12  4.278504e+12   \n",
       "89   1.998444e+11  2.120494e+11  2.052528e+11  1.884803e+11  2.146678e+11   \n",
       "111  3.372418e+11  3.866934e+11  3.989330e+11  4.286087e+11  5.133918e+11   \n",
       "116  1.961796e+12  2.091932e+12  2.011302e+12  1.897462e+12  2.155360e+12   \n",
       "190  5.246412e+11  5.887799e+11  5.960585e+11  5.994428e+11  6.813461e+11   \n",
       "\n",
       "             2022  \n",
       "55   4.082469e+12  \n",
       "89   2.175813e+11  \n",
       "111  5.331400e+11  \n",
       "116  2.049737e+12  \n",
       "190  6.881250e+11  \n",
       "\n",
       "[5 rows x 22 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gdp_filtered.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5ad4be83",
   "metadata": {},
   "source": [
    "**Read the surface temperature data from the second dataset source"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b4fb4839",
   "metadata": {},
   "outputs": [],
   "source": [
    "df2 = pd.read_csv(r\"C:\\Users\\YUGAL\\Downloads\\GDL-Yearly-Average-Surface-Temperature-(ÂºC)-data.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "cbf79b8f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Continent</th>\n",
       "      <th>ISO_Code</th>\n",
       "      <th>Level</th>\n",
       "      <th>GDLCODE</th>\n",
       "      <th>Region</th>\n",
       "      <th>1990</th>\n",
       "      <th>1991</th>\n",
       "      <th>1992</th>\n",
       "      <th>1993</th>\n",
       "      <th>...</th>\n",
       "      <th>2013</th>\n",
       "      <th>2014</th>\n",
       "      <th>2015</th>\n",
       "      <th>2016</th>\n",
       "      <th>2017</th>\n",
       "      <th>2018</th>\n",
       "      <th>2019</th>\n",
       "      <th>2020</th>\n",
       "      <th>2021</th>\n",
       "      <th>2022</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia/Pacific</td>\n",
       "      <td>AFG</td>\n",
       "      <td>National</td>\n",
       "      <td>AFGt</td>\n",
       "      <td>Total</td>\n",
       "      <td>9.466</td>\n",
       "      <td>8.369</td>\n",
       "      <td>8.203</td>\n",
       "      <td>8.754</td>\n",
       "      <td>...</td>\n",
       "      <td>9.752</td>\n",
       "      <td>9.400</td>\n",
       "      <td>9.999</td>\n",
       "      <td>11.000</td>\n",
       "      <td>10.730</td>\n",
       "      <td>10.910</td>\n",
       "      <td>10.010</td>\n",
       "      <td>9.569</td>\n",
       "      <td>11.180</td>\n",
       "      <td>10.820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia/Pacific</td>\n",
       "      <td>AFG</td>\n",
       "      <td>Subnat</td>\n",
       "      <td>AFGr101</td>\n",
       "      <td>Central (Kabul Wardak Kapisa Logar Parwan Panj...</td>\n",
       "      <td>5.755</td>\n",
       "      <td>4.302</td>\n",
       "      <td>4.228</td>\n",
       "      <td>5.013</td>\n",
       "      <td>...</td>\n",
       "      <td>5.216</td>\n",
       "      <td>5.403</td>\n",
       "      <td>5.920</td>\n",
       "      <td>7.382</td>\n",
       "      <td>6.887</td>\n",
       "      <td>7.200</td>\n",
       "      <td>5.790</td>\n",
       "      <td>5.609</td>\n",
       "      <td>7.446</td>\n",
       "      <td>6.653</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia/Pacific</td>\n",
       "      <td>AFG</td>\n",
       "      <td>Subnat</td>\n",
       "      <td>AFGr102</td>\n",
       "      <td>Central Highlands (Bamyan Daikundi)</td>\n",
       "      <td>4.144</td>\n",
       "      <td>3.013</td>\n",
       "      <td>2.819</td>\n",
       "      <td>3.501</td>\n",
       "      <td>...</td>\n",
       "      <td>4.200</td>\n",
       "      <td>3.920</td>\n",
       "      <td>4.462</td>\n",
       "      <td>5.528</td>\n",
       "      <td>5.369</td>\n",
       "      <td>5.909</td>\n",
       "      <td>4.314</td>\n",
       "      <td>4.223</td>\n",
       "      <td>6.375</td>\n",
       "      <td>5.648</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia/Pacific</td>\n",
       "      <td>AFG</td>\n",
       "      <td>Subnat</td>\n",
       "      <td>AFGr103</td>\n",
       "      <td>East (Nangarhar Kunar Laghman Nooristan)</td>\n",
       "      <td>8.965</td>\n",
       "      <td>7.778</td>\n",
       "      <td>7.696</td>\n",
       "      <td>8.362</td>\n",
       "      <td>...</td>\n",
       "      <td>8.808</td>\n",
       "      <td>8.618</td>\n",
       "      <td>8.942</td>\n",
       "      <td>10.320</td>\n",
       "      <td>10.090</td>\n",
       "      <td>9.796</td>\n",
       "      <td>9.166</td>\n",
       "      <td>8.979</td>\n",
       "      <td>10.000</td>\n",
       "      <td>9.915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>Asia/Pacific</td>\n",
       "      <td>AFG</td>\n",
       "      <td>Subnat</td>\n",
       "      <td>AFGr104</td>\n",
       "      <td>North (Samangan Sar-e-Pul Balkh Jawzjan Faryab)</td>\n",
       "      <td>11.460</td>\n",
       "      <td>10.840</td>\n",
       "      <td>10.560</td>\n",
       "      <td>10.660</td>\n",
       "      <td>...</td>\n",
       "      <td>12.070</td>\n",
       "      <td>11.520</td>\n",
       "      <td>12.330</td>\n",
       "      <td>12.910</td>\n",
       "      <td>12.660</td>\n",
       "      <td>12.750</td>\n",
       "      <td>12.650</td>\n",
       "      <td>11.750</td>\n",
       "      <td>13.010</td>\n",
       "      <td>12.890</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 39 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Country     Continent ISO_Code     Level  GDLCODE  \\\n",
       "0  Afghanistan  Asia/Pacific      AFG  National     AFGt   \n",
       "1  Afghanistan  Asia/Pacific      AFG    Subnat  AFGr101   \n",
       "2  Afghanistan  Asia/Pacific      AFG    Subnat  AFGr102   \n",
       "3  Afghanistan  Asia/Pacific      AFG    Subnat  AFGr103   \n",
       "4  Afghanistan  Asia/Pacific      AFG    Subnat  AFGr104   \n",
       "\n",
       "                                              Region    1990    1991    1992  \\\n",
       "0                                              Total   9.466   8.369   8.203   \n",
       "1  Central (Kabul Wardak Kapisa Logar Parwan Panj...   5.755   4.302   4.228   \n",
       "2                Central Highlands (Bamyan Daikundi)   4.144   3.013   2.819   \n",
       "3           East (Nangarhar Kunar Laghman Nooristan)   8.965   7.778   7.696   \n",
       "4    North (Samangan Sar-e-Pul Balkh Jawzjan Faryab)  11.460  10.840  10.560   \n",
       "\n",
       "     1993  ...    2013    2014    2015    2016    2017    2018    2019  \\\n",
       "0   8.754  ...   9.752   9.400   9.999  11.000  10.730  10.910  10.010   \n",
       "1   5.013  ...   5.216   5.403   5.920   7.382   6.887   7.200   5.790   \n",
       "2   3.501  ...   4.200   3.920   4.462   5.528   5.369   5.909   4.314   \n",
       "3   8.362  ...   8.808   8.618   8.942  10.320  10.090   9.796   9.166   \n",
       "4  10.660  ...  12.070  11.520  12.330  12.910  12.660  12.750  12.650   \n",
       "\n",
       "     2020    2021    2022  \n",
       "0   9.569  11.180  10.820  \n",
       "1   5.609   7.446   6.653  \n",
       "2   4.223   6.375   5.648  \n",
       "3   8.979  10.000   9.915  \n",
       "4  11.750  13.010  12.890  \n",
       "\n",
       "[5 rows x 39 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.head() # Rough picture of the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3f501a44",
   "metadata": {},
   "outputs": [],
   "source": [
    "df2 = df2.dropna() # dropping all the missing values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "01f80033",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Afghanistan', 'Albania', 'Algeria', 'Andorra', 'Angola',\n",
       "       'Antigua and Barbuda', 'Argentina urban', 'Armenia', 'Australia',\n",
       "       'Austria', 'Azerbaijan', 'Bahamas', 'Bahrain', 'Bangladesh',\n",
       "       'Barbados', 'Belarus', 'Belgium', 'Belize', 'Benin', 'Bhutan',\n",
       "       'Bolivia', 'Bosnia and Herzegovina', 'Botswana', 'Brazil',\n",
       "       'Brunei Darussalam', 'Bulgaria', 'Burkina Faso', 'Burundi',\n",
       "       'Cambodia', 'Cameroon', 'Canada', 'Cape Verde',\n",
       "       'Central African Republic CAR', 'Chad', 'Chili', 'China',\n",
       "       'Colombia', 'Comoros', 'Congo Brazzaville',\n",
       "       'Congo Democratic Republic', 'Costa Rica', \"Cote d'Ivoire\",\n",
       "       'Croatia', 'Cuba', 'Cyprus', 'Czech Republic', 'Denmark',\n",
       "       'Djibouti', 'Dominica', 'Dominican Republic', 'Ecuador', 'Egypt',\n",
       "       'El Salvador', 'Equatorial Guinea', 'Eritrea', 'Estonia',\n",
       "       'Eswatini', 'Ethiopia', 'Fiji', 'FInland', 'Finland', 'France',\n",
       "       'French Polynesia', 'Gabon', 'Gambia', 'Georgia', 'Germany',\n",
       "       'Ghana', 'Gibraltar', 'Greece', 'Greenland', 'Grenada',\n",
       "       'Guatemala', 'Guinea', 'Guinea Bissau', 'Guyana', 'Haiti',\n",
       "       'Honduras', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran',\n",
       "       'Iraq', 'Ireland', 'Isle of Man', 'Israel', 'Italy', 'Jamaica',\n",
       "       'Japan', 'Jersey', 'Jordan', 'Kazakhstan', 'Kenya', 'Kiribati',\n",
       "       'Kosovo', 'Kuwait', 'Kyrgyzstan', 'Lao', 'Latvia', 'Lebanon',\n",
       "       'Lesotho', 'Liberia', 'Libya', 'Liechtenstein', 'Lithuania',\n",
       "       'Luxembourg', 'Madagascar', 'Malawi', 'Malaysia', 'Mali',\n",
       "       'Mauritania', 'Mauritius', 'Mexico',\n",
       "       'Micronesia (Federated States of)', 'Moldova', 'Monaco',\n",
       "       'Mongolia', 'Monte Negro', 'Morocco', 'Mozambique', 'Myanmar',\n",
       "       'Namibia', 'Nepal', 'Netherlands', 'New Zealand', 'Nicaragua',\n",
       "       'Niger', 'Nigeria', 'North Macedonia', 'Norway', 'Oman',\n",
       "       'Pakistan', 'Palestine', 'Panama', 'Papua New Guinea', 'Paraguay',\n",
       "       'Peru', 'Philippines', 'Poland', 'Portugal', 'Qatar', 'Romania',\n",
       "       'Russian Federation', 'Rwanda', 'Saint Kitts and Nevis',\n",
       "       'Saint Lucia', 'Saint Vincent and the Grenadines', 'Samoa',\n",
       "       'San Marino', 'Sao Tome & Principe', 'Saudi Arabia', 'Senegal',\n",
       "       'Serbia', 'Sierra Leone', 'Singapore', 'Slovakia', 'Slovenia',\n",
       "       'Solomon Islands', 'Somalia', 'South Africa', 'South Korea',\n",
       "       'South Sudan', 'Spain', 'Sri Lanka', 'Sudan', 'Suriname',\n",
       "       'Svalbard and Jan Mayen', 'Sweden', 'Switzerland', 'Syria',\n",
       "       'Tajikistan', 'Tanzania', 'Thailand', 'Timor Leste', 'Togo',\n",
       "       'Tonga', 'Trinidad & Tobago', 'Tunisia', 'Turkey', 'Turkmenistan',\n",
       "       'Turks & Caicos Islands', 'Uganda', 'Ukraine',\n",
       "       'United Arab Emirates', 'United Kingdom', 'United States',\n",
       "       'Uruguay', 'Uzbekistan', 'Vanuatu', 'Vatican City', 'Venezuela',\n",
       "       'Vietnam', 'Yemen', 'Zambia', 'Zimbabwe'], dtype=object)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2['Country'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "25e5171b",
   "metadata": {},
   "source": [
    "Selecting the range of years for which we intend to conduct our study(data should match with the earlier dataframes from other sources) and selecting which columns to keep from the whole DataFrame."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "5626fc15",
   "metadata": {},
   "outputs": [],
   "source": [
    "year_range = range(2002,2023)\n",
    "years = [str(i) for i in year_range]\n",
    "cat_cols = ['Country','Level']\n",
    "cols_to_keep = cat_cols + years\n",
    "temp_data = df2[cols_to_keep]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f59f2fff",
   "metadata": {},
   "source": [
    "Selecting the countries we intend to study(should match with the other dataframes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "2a4f0529",
   "metadata": {},
   "outputs": [],
   "source": [
    "countries_to_study = ['Germany','Ireland','Poland','Greece','Italy']\n",
    "temp_filtered = temp_data[temp_data['Country'].isin(countries_to_study) & (temp_data['Level']==\"National\")].drop(columns=['Level'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "0d574dc8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>2002</th>\n",
       "      <th>2003</th>\n",
       "      <th>2004</th>\n",
       "      <th>2005</th>\n",
       "      <th>2006</th>\n",
       "      <th>2007</th>\n",
       "      <th>2008</th>\n",
       "      <th>2009</th>\n",
       "      <th>2010</th>\n",
       "      <th>...</th>\n",
       "      <th>2013</th>\n",
       "      <th>2014</th>\n",
       "      <th>2015</th>\n",
       "      <th>2016</th>\n",
       "      <th>2017</th>\n",
       "      <th>2018</th>\n",
       "      <th>2019</th>\n",
       "      <th>2020</th>\n",
       "      <th>2021</th>\n",
       "      <th>2022</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>933</th>\n",
       "      <td>Germany</td>\n",
       "      <td>9.677</td>\n",
       "      <td>9.541</td>\n",
       "      <td>9.181</td>\n",
       "      <td>9.307</td>\n",
       "      <td>9.864</td>\n",
       "      <td>10.150</td>\n",
       "      <td>9.780</td>\n",
       "      <td>9.458</td>\n",
       "      <td>8.055</td>\n",
       "      <td>...</td>\n",
       "      <td>8.926</td>\n",
       "      <td>10.580</td>\n",
       "      <td>10.140</td>\n",
       "      <td>9.775</td>\n",
       "      <td>9.819</td>\n",
       "      <td>10.680</td>\n",
       "      <td>10.55</td>\n",
       "      <td>10.71</td>\n",
       "      <td>9.396</td>\n",
       "      <td>10.700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>962</th>\n",
       "      <td>Greece</td>\n",
       "      <td>15.530</td>\n",
       "      <td>15.420</td>\n",
       "      <td>15.380</td>\n",
       "      <td>15.120</td>\n",
       "      <td>15.100</td>\n",
       "      <td>15.980</td>\n",
       "      <td>15.980</td>\n",
       "      <td>15.890</td>\n",
       "      <td>16.350</td>\n",
       "      <td>...</td>\n",
       "      <td>16.250</td>\n",
       "      <td>16.160</td>\n",
       "      <td>15.860</td>\n",
       "      <td>16.190</td>\n",
       "      <td>15.850</td>\n",
       "      <td>16.490</td>\n",
       "      <td>16.35</td>\n",
       "      <td>16.24</td>\n",
       "      <td>16.220</td>\n",
       "      <td>16.090</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1171</th>\n",
       "      <td>Ireland</td>\n",
       "      <td>10.100</td>\n",
       "      <td>10.140</td>\n",
       "      <td>10.050</td>\n",
       "      <td>10.200</td>\n",
       "      <td>10.280</td>\n",
       "      <td>10.460</td>\n",
       "      <td>9.726</td>\n",
       "      <td>9.693</td>\n",
       "      <td>8.707</td>\n",
       "      <td>...</td>\n",
       "      <td>9.707</td>\n",
       "      <td>10.230</td>\n",
       "      <td>9.609</td>\n",
       "      <td>9.903</td>\n",
       "      <td>10.220</td>\n",
       "      <td>10.050</td>\n",
       "      <td>10.09</td>\n",
       "      <td>10.04</td>\n",
       "      <td>10.250</td>\n",
       "      <td>10.520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1182</th>\n",
       "      <td>Italy</td>\n",
       "      <td>12.490</td>\n",
       "      <td>12.640</td>\n",
       "      <td>12.120</td>\n",
       "      <td>11.560</td>\n",
       "      <td>12.300</td>\n",
       "      <td>12.700</td>\n",
       "      <td>12.570</td>\n",
       "      <td>12.570</td>\n",
       "      <td>11.880</td>\n",
       "      <td>...</td>\n",
       "      <td>12.390</td>\n",
       "      <td>13.040</td>\n",
       "      <td>13.090</td>\n",
       "      <td>12.870</td>\n",
       "      <td>12.810</td>\n",
       "      <td>13.160</td>\n",
       "      <td>13.06</td>\n",
       "      <td>13.04</td>\n",
       "      <td>12.730</td>\n",
       "      <td>13.680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1812</th>\n",
       "      <td>Poland</td>\n",
       "      <td>9.201</td>\n",
       "      <td>8.363</td>\n",
       "      <td>8.378</td>\n",
       "      <td>8.353</td>\n",
       "      <td>8.750</td>\n",
       "      <td>9.407</td>\n",
       "      <td>9.472</td>\n",
       "      <td>8.624</td>\n",
       "      <td>7.567</td>\n",
       "      <td>...</td>\n",
       "      <td>8.550</td>\n",
       "      <td>9.731</td>\n",
       "      <td>9.864</td>\n",
       "      <td>9.272</td>\n",
       "      <td>9.006</td>\n",
       "      <td>9.905</td>\n",
       "      <td>10.33</td>\n",
       "      <td>10.03</td>\n",
       "      <td>8.664</td>\n",
       "      <td>9.577</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Country    2002    2003    2004    2005    2006    2007    2008    2009  \\\n",
       "933   Germany   9.677   9.541   9.181   9.307   9.864  10.150   9.780   9.458   \n",
       "962    Greece  15.530  15.420  15.380  15.120  15.100  15.980  15.980  15.890   \n",
       "1171  Ireland  10.100  10.140  10.050  10.200  10.280  10.460   9.726   9.693   \n",
       "1182    Italy  12.490  12.640  12.120  11.560  12.300  12.700  12.570  12.570   \n",
       "1812   Poland   9.201   8.363   8.378   8.353   8.750   9.407   9.472   8.624   \n",
       "\n",
       "        2010  ...    2013    2014    2015    2016    2017    2018   2019  \\\n",
       "933    8.055  ...   8.926  10.580  10.140   9.775   9.819  10.680  10.55   \n",
       "962   16.350  ...  16.250  16.160  15.860  16.190  15.850  16.490  16.35   \n",
       "1171   8.707  ...   9.707  10.230   9.609   9.903  10.220  10.050  10.09   \n",
       "1182  11.880  ...  12.390  13.040  13.090  12.870  12.810  13.160  13.06   \n",
       "1812   7.567  ...   8.550   9.731   9.864   9.272   9.006   9.905  10.33   \n",
       "\n",
       "       2020    2021    2022  \n",
       "933   10.71   9.396  10.700  \n",
       "962   16.24  16.220  16.090  \n",
       "1171  10.04  10.250  10.520  \n",
       "1182  13.04  12.730  13.680  \n",
       "1812  10.03   8.664   9.577  \n",
       "\n",
       "[5 rows x 22 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temp_filtered.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10fe37ed",
   "metadata": {},
   "source": [
    "with this we are done with the data cleaning and preproccsing.\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
